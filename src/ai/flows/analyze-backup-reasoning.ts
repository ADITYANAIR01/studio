// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes a backup file to determine if manual decryption is required.
 *
 * - analyzeBackupReasoning - A function that analyzes the backup file and determines if manual decryption is required.
 * - AnalyzeBackupReasoningInput - The input type for the analyzeBackupReasoning function.
 * - AnalyzeBackupReasoningOutput - The return type for the analyzeBackupReasoning function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeBackupReasoningInputSchema = z.object({
  backupFileContent: z
    .string()
    .describe('The content of the backup file as a string.'),
});
export type AnalyzeBackupReasoningInput = z.infer<
  typeof AnalyzeBackupReasoningInputSchema
>;

const AnalyzeBackupReasoningOutputSchema = z.object({
  manualDecryptionRequired: z
    .boolean()
    .describe(
      'Whether manual decryption is required based on the backup file properties and metadata.'
    ),
  reasoning: z
    .string()
    .describe(
      'The reasoning behind the determination of whether manual decryption is required.'
    ),
});
export type AnalyzeBackupReasoningOutput = z.infer<
  typeof AnalyzeBackupReasoningOutputSchema
>;

export async function analyzeBackupReasoning(
  input: AnalyzeBackupReasoningInput
): Promise<AnalyzeBackupReasoningOutput> {
  return analyzeBackupReasoningFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeBackupReasoningPrompt',
  input: {schema: AnalyzeBackupReasoningInputSchema},
  output: {schema: AnalyzeBackupReasoningOutputSchema},
  prompt: `You are a security expert analyzing a backup file to determine if manual decryption is required.

  Analyze the following backup file content and determine if manual decryption is required based on its properties and metadata.

  Backup File Content: {{{backupFileContent}}}

  Consider factors such as encryption markers, metadata indicating encryption status, and the overall structure of the file.

  Explain your reasoning for the determination.

  Set the manualDecryptionRequired field to true if manual decryption is required, and false otherwise.
  Provide a detailed explanation in the reasoning field.
  `,
});

const analyzeBackupReasoningFlow = ai.defineFlow(
  {
    name: 'analyzeBackupReasoningFlow',
    inputSchema: AnalyzeBackupReasoningInputSchema,
    outputSchema: AnalyzeBackupReasoningOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

